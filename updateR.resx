<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCAC7APkDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDfQcmrMYPFRIvzVZjXpQUTRg1bjBqGNatRigRPHnrVpM8cmoIx
        VmMUATITUoY+pqNacDQIkBPrTgajFOFAD6KQGloAKKKKACiiigAooooAKKKKACiiigBDUTg+9TUxhmgC
        q4Pqarup96uutV5FoAoSKc1VkU1oyJmq0iYoGZsimqsiYrSkjqrIg5oGZ0immYq1InWo9ntQMnReasxr
        0qJBzViMdKBE8YrH8SeMbXwtbSzXNpPOI5o4cRuFyXjMgPI6ADFbcYrzf4uD/iVXX/YQtf8A0lNAj0DU
        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
        mU2TrTKBn//Z
</value>
  </data>
</root>